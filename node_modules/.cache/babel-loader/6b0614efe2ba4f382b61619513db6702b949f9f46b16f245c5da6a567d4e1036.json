{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alecv\\\\Album Reviews Site\\\\client\\\\src\\\\Main.js\";\nimport './App.css';\nimport Axios from 'axios';\nimport { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport apiBasePath from './globalVars';\nimport { ReactSession } from 'react-client-session';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  var _s = $RefreshSig$();\n  /*const personid = -1//ReactSession.get(\"personid\");\r\n  const getAlbums = () => {\r\n    Axios.get(apiBasePath + '/getalbums/' + personid)\r\n      .then(\r\n        res => {\r\n          let albums = []\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            albums[i] = {\r\n              index: i,\r\n              album: res.data[i]\r\n            }\r\n          }\r\n        }\r\n      )\r\n  }\r\n  useEffect(\r\n    () => getAlbums(),\r\n  )\r\n  const setDisabledInputs = (addedbypersonid) => {\r\n    if (personid === -1 && addedbypersonid !== -1) {\r\n      return true\r\n    }\r\n    else {\r\n      return false\r\n    }\r\n  }\r\n  const deletealbum = (id) => {\r\n    var confirm = window.confirm('Delete album?')\r\n    confirm ? \r\n      Axios.delete(apiBasePath + '/deletealbum/' + id)\r\n        .then(\r\n          () => {\r\n            getAlbums()\r\n          }\r\n        )\r\n    : void(0)\r\n  }\r\n  const Album = ({ album, index, ratings, handleChange, handleReset }) => {\r\n    const inputRef = useRef();\r\n    return (\r\n      <div class=\"block\" key={album.index}>\r\n        <div class=\"columns is-vcentered\">\r\n          <div class=\"column is-3\">\r\n            <img src=\"/covers/Jeff_Buckley_grace.jpg\" alt=\"cover\"></img>\r\n          </div>\r\n          <div class=\"column is-2\">\r\n            <strong>{album.album.artist}</strong><br />\r\n            <i>{album.album.title}</i><br />\r\n            Release Date: {(album.album.releasedate == null) ? null : album.album.releasedate.substring(0, 10)}<br />\r\n            {album.album.genre}<br />\r\n            {album.album.recordlabel}<br />\r\n            Added by: {album.album.addedbypersonname}<br />\r\n            Added date: {(album.album.addeddate == null) ? null : album.album.addeddate.substring(0, 10)}<br />\r\n          </div>\r\n          <div class=\"column is-2\">\r\n            <form class=\"form\" name='form'>\r\n              <div class=\"field\">\r\n                <label class=\"label\">Your rating:</label>\r\n                <div class=\"control\">\r\n                  <input\r\n                    class=\"input\"\r\n                    name='scoreRange'\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max=\"10\"\r\n                    step=\"0.1\"\r\n                    defaultValue={album.album.rating}\r\n                    onChange={(e) => handleChange(e, album.index)}\r\n                    disabled={setDisabledInputs(album.album.addedbypersonid)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div class=\"field is-horizontal\">\r\n                <div class=\"field-body\">\r\n                  <div class=\"field is-narrow\">\r\n                    <div class=\"control\">\r\n                      <input\r\n                        class=\"input\"\r\n                        name='scoreNum'\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        max=\"10\"\r\n                        step=\"0.1\"\r\n                        placeholder={album.album.rating}\r\n                        onChange={(e) => handleChange(e, album.index)}\r\n                        disabled={setDisabledInputs(album.album.addedbypersonid)}\r\n                        ref={inputRef}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"field\">\r\n                    <div class=\"control\">\r\n                      <input\r\n                        class=\"input\"\r\n                        type=\"reset\"\r\n                        onClick={() => handleReset(index, inputRef)}\r\n                        disabled={setDisabledInputs(album.album.addedbypersonid)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"field\">\r\n                    <div class=\"control\">\r\n                      <button\r\n                        type=\"button\"\r\n                        class=\"button is-dark\"\r\n                        disabled={setDisabledInputs(album.album.addedbypersonid)}\r\n                      >\r\n                        Submit\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"column is-2\">\r\n            <article class=\"message\">\r\n              <div class=\"message-header\">\r\n                <p>Average score</p>\r\n              </div>\r\n              <div class=\"message-body\">\r\n                {album.album.averagescore}\r\n              </div>\r\n            </article>\r\n          </div>\r\n          <div class=\"column is-3\">\r\n            <div class=\"block\">\r\n              <button\r\n                class=\"button is-danger\"\r\n                onClick={() => { deletealbum(album.album.albumid) }}\r\n                disabled={setDisabledInputs(album.album.addedbypersonid)}\r\n              >\r\n                Delete Album\r\n              </button>\r\n              <Link to={`editalbum/${album.album.albumid}`}>\r\n                <button\r\n                  class=\"button is-green\"\r\n                  disabled={setDisabledInputs(album.album.addedbypersonid)}\r\n                >\r\n                  Edit Album\r\n                </button>\r\n              </Link>\r\n            </div>\r\n            <div class=\"block\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  */\n  const AlbumList = _ref => {\n    _s();\n    let {\n      albums\n    } = _ref;\n    const [ratings, setRatings] = useState(albums.map(album => album.album.rating));\n    const handleChange = (index, album) => {\n      const newRatings = [...ratings];\n      newRatings[index] = newRatings;\n      setRatings(newRatings);\n    };\n    const handleReset = (index, inputRef) => {\n      setRatings(ratings => {\n        const newRatings = [...ratings];\n        newRatings[index] = albums[index].album.rating;\n        inputRef.current.value = \"\";\n        return newRatings;\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n  _s(AlbumList, \"tjUuxySuo7UnoNSKvgM9tNGXrQg=\");\n  return AlbumList;\n}\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["Axios","useState","useEffect","useRef","Link","apiBasePath","ReactSession","Main","AlbumList","albums","ratings","setRatings","map","album","rating","handleChange","index","newRatings","handleReset","inputRef","current","value"],"sources":["C:/Users/alecv/Album Reviews Site/client/src/Main.js"],"sourcesContent":["import './App.css';\r\nimport Axios from 'axios';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport apiBasePath from './globalVars';\r\nimport { ReactSession } from 'react-client-session';\r\n\r\nfunction Main() {\r\n  /*const personid = -1//ReactSession.get(\"personid\");\r\n  const getAlbums = () => {\r\n    Axios.get(apiBasePath + '/getalbums/' + personid)\r\n      .then(\r\n        res => {\r\n          let albums = []\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            albums[i] = {\r\n              index: i,\r\n              album: res.data[i]\r\n            }\r\n          }\r\n        }\r\n      )\r\n  }\r\n  useEffect(\r\n    () => getAlbums(),\r\n  )\r\n  const setDisabledInputs = (addedbypersonid) => {\r\n    if (personid === -1 && addedbypersonid !== -1) {\r\n      return true\r\n    }\r\n    else {\r\n      return false\r\n    }\r\n  }\r\n  const deletealbum = (id) => {\r\n    var confirm = window.confirm('Delete album?')\r\n    confirm ? \r\n      Axios.delete(apiBasePath + '/deletealbum/' + id)\r\n        .then(\r\n          () => {\r\n            getAlbums()\r\n          }\r\n        )\r\n    : void(0)\r\n  }\r\n  const Album = ({ album, index, ratings, handleChange, handleReset }) => {\r\n    const inputRef = useRef();\r\n    return (\r\n      <div class=\"block\" key={album.index}>\r\n        <div class=\"columns is-vcentered\">\r\n          <div class=\"column is-3\">\r\n            <img src=\"/covers/Jeff_Buckley_grace.jpg\" alt=\"cover\"></img>\r\n          </div>\r\n          <div class=\"column is-2\">\r\n            <strong>{album.album.artist}</strong><br />\r\n            <i>{album.album.title}</i><br />\r\n            Release Date: {(album.album.releasedate == null) ? null : album.album.releasedate.substring(0, 10)}<br />\r\n            {album.album.genre}<br />\r\n            {album.album.recordlabel}<br />\r\n            Added by: {album.album.addedbypersonname}<br />\r\n            Added date: {(album.album.addeddate == null) ? null : album.album.addeddate.substring(0, 10)}<br />\r\n          </div>\r\n          <div class=\"column is-2\">\r\n            <form class=\"form\" name='form'>\r\n              <div class=\"field\">\r\n                <label class=\"label\">Your rating:</label>\r\n                <div class=\"control\">\r\n                  <input\r\n                    class=\"input\"\r\n                    name='scoreRange'\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max=\"10\"\r\n                    step=\"0.1\"\r\n                    defaultValue={album.album.rating}\r\n                    onChange={(e) => handleChange(e, album.index)}\r\n                    disabled={setDisabledInputs(album.album.addedbypersonid)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div class=\"field is-horizontal\">\r\n                <div class=\"field-body\">\r\n                  <div class=\"field is-narrow\">\r\n                    <div class=\"control\">\r\n                      <input\r\n                        class=\"input\"\r\n                        name='scoreNum'\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        max=\"10\"\r\n                        step=\"0.1\"\r\n                        placeholder={album.album.rating}\r\n                        onChange={(e) => handleChange(e, album.index)}\r\n                        disabled={setDisabledInputs(album.album.addedbypersonid)}\r\n                        ref={inputRef}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"field\">\r\n                    <div class=\"control\">\r\n                      <input\r\n                        class=\"input\"\r\n                        type=\"reset\"\r\n                        onClick={() => handleReset(index, inputRef)}\r\n                        disabled={setDisabledInputs(album.album.addedbypersonid)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"field\">\r\n                    <div class=\"control\">\r\n                      <button\r\n                        type=\"button\"\r\n                        class=\"button is-dark\"\r\n                        disabled={setDisabledInputs(album.album.addedbypersonid)}\r\n                      >\r\n                        Submit\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"column is-2\">\r\n            <article class=\"message\">\r\n              <div class=\"message-header\">\r\n                <p>Average score</p>\r\n              </div>\r\n              <div class=\"message-body\">\r\n                {album.album.averagescore}\r\n              </div>\r\n            </article>\r\n          </div>\r\n          <div class=\"column is-3\">\r\n            <div class=\"block\">\r\n              <button\r\n                class=\"button is-danger\"\r\n                onClick={() => { deletealbum(album.album.albumid) }}\r\n                disabled={setDisabledInputs(album.album.addedbypersonid)}\r\n              >\r\n                Delete Album\r\n              </button>\r\n              <Link to={`editalbum/${album.album.albumid}`}>\r\n                <button\r\n                  class=\"button is-green\"\r\n                  disabled={setDisabledInputs(album.album.addedbypersonid)}\r\n                >\r\n                  Edit Album\r\n                </button>\r\n              </Link>\r\n            </div>\r\n            <div class=\"block\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  */\r\n  const AlbumList = ({ albums }) => {\r\n    const [ratings, setRatings] = useState(albums.map(album => album.album.rating))\r\n    const handleChange = (index, album) => {\r\n      const newRatings = [...ratings]\r\n      newRatings[index] = newRatings\r\n      setRatings(newRatings)\r\n    }\r\n    const handleReset = (index, inputRef) => {\r\n      setRatings(\r\n        ratings => {\r\n          const newRatings = [...ratings]\r\n          newRatings[index] = albums[index].album.rating\r\n          inputRef.current.value = \"\"\r\n          return newRatings\r\n        }\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n        <h1>hi</h1>\r\n        {\r\n          /*albums.map(\r\n            (album, index) => (\r\n              <Album\r\n                key={album.index}\r\n                album={album}\r\n                index={index}\r\n                ratings={ratings}\r\n                handleChange={handleChange}\r\n                handleReset={handleReset}\r\n              />\r\n            )\r\n          )*/\r\n        }\r\n      </>\r\n    )\r\n  }\r\n  return AlbumList\r\n}\r\n\r\nexport default Main;"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,WAAW,MAAM,cAAc;AACtC,SAASC,YAAY,QAAQ,sBAAsB;AAAC;AAAA;AAEpD,SAASC,IAAI,GAAG;EAAA;EACdgB;IAAA;IAAA,IAAf;MAAEC;IAAO,CAAC;IAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAACQ,MAAM,CAACG,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACA,KAAK,CAACC,MAAM,CAAC,CAAC;IAC/E,MAAMC,YAAY,GAAG,CAACC,KAAK,EAAEH,KAAK,KAAK;MACrC,MAAMI,UAAU,GAAG,CAAC,GAAGP,OAAO,CAAC;MAC/BO,UAAU,CAACD,KAAK,CAAC,GAAGC,UAAU;MAC9BN,UAAU,CAACM,UAAU,CAAC;IACxB,CAAC;IACD,MAAMC,WAAW,GAAG,CAACF,KAAK,EAAEG,QAAQ,KAAK;MACvCR,UAAU,CACRD,OAAO,IAAI;QACT,MAAMO,UAAU,GAAG,CAAC,GAAGP,OAAO,CAAC;QAC/BO,UAAU,CAACD,KAAK,CAAC,GAAGP,MAAM,CAACO,KAAK,CAAC,CAACH,KAAK,CAACC,MAAM;QAC9CK,QAAQ,CAACC,OAAO,CAACC,KAAK,GAAG,EAAE;QAC3B,OAAOJ,UAAU;MACnB,CAAC,CACF;IACH,CAAC;IACD,oBACE;MAAA,uBACE;QAAA,UAAI;MAAE;QAAA;QAAA;QAAA;MAAA;IAAK,iBAeV;EAEP,CAAC;EAAA,GApCKT,SAAS;EAqCf,OAAOA,SAAS;AAClB;AAAC,KA9LQD,IAAI;AAgMb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}